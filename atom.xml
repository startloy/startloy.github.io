<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>The Skinny Coding</title>
  
  <subtitle>AfterLife</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.loy7778.cn/"/>
  <updated>2018-06-12T13:07:24.392Z</updated>
  <id>http://www.loy7778.cn/</id>
  
  <author>
    <name>Loy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux 定时任务笔记</title>
    <link href="http://www.loy7778.cn/2018/Linux-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.loy7778.cn/2018/Linux-定时任务笔记/</id>
    <published>2018-06-10T12:57:04.000Z</published>
    <updated>2018-06-12T13:07:24.392Z</updated>
    
    <content type="html"><![CDATA[<p>Imooc 视频笔记</p><p>检查 cron 服务<br>    – 检查 Crontab 工具是否安装：crontab -l<br>    – 检查 crond 服务是否启动 service crond status</p><p>安装 cron<br>    – yum install vixie-cron<br>    – yum install crontabs</p><p>每分钟打印当前时间到一个日志文件中<br>    – <em> </em> <em> </em> * COMMAND</p><pre><code>0 ~ 59 分钟0 ~ 23 小时1 ~ 31 日期1 ~ 12 月份0 ~ 7 星期（0 或者 7 都表示星期天）</code></pre><p>执行级别之间用空格间隔</p><p>– <em> 表示任何时候都匹配<br>– 可以用 “A,B,C” 表示A或者B或者C时执行命令<br>– 可以用 “A-B” 表示A到B之间时执行命令<br>– 可以用 “</em>/A” 表示每A分钟(小时等) 执行一次命令</p><p>– tail -f /tmp/log.txt 持续输出 /tmp/log.txt 文件中的数据<br>– tail -3 /tmp/log.txt 输出 /tmp/log.txt 文件中最后三条数据<br>– tail /tmp/log.txt 输出 /tmp/log.txt 文件中所有数据</p><p>一个执行级别有多个数值的 用逗号间隔</p><p>30 21 <em> </em> <em> service httpd restart // 每天 21:30 重启 apache服务<br>// 离散型分布<br>45 4 1,10,22 </em> <em> service httpd restart // 每月1、10、22 日 的4:45 重启 apache<br>// 连续分布<br>45 4 1-10 </em> * service httpd restart // 每月 1 到 10 号 重启 Apache</p><p>– <em>/1 </em> <em> </em> * date &gt;&gt; /tmp/log.txt  // 每隔一分钟执行一次计划任务  斜线之前是执行范围，之后是频次</p><p>1-59/2 <em> </em> <em> </em> service httpd restart // 从第一分钟到59分钟内 每两分钟执行一次计划任务 （相当于只在奇数分钟时执行任务）</p><p>0 23-7/1 <em> </em> <em> service httpd restart // 每天晚上的11点到第二天7点 重启 apache 若分钟数 写 </em> 则表示 在每天晚上的11点到第二天7点 的每一分钟都会重启 apache</p><p>0,30 18-23 <em> </em> <em> service httpd restart // 每天18点至23点之间每隔30分钟重启apache<br>0-59/30 18-23 </em> <em> </em> service httpd restart // 每天18点至23点之间每隔30分钟重启apache</p><p>crontab -help 查看 cron 命令帮助</p><p>crond 计划任务执行的日子记录在 /var/log/cron 文件中<br>tail -f /var/log/cron  // 查看任务执行日志</p><p>cron 的系统配置文件 /etc/crontab 可以通过编辑配置文件来实现系统级定时任务</p><p>cron.d 下的配置文件会自动载入为 root 用户的计划任务<br>crontab 文件名  // 将文件中的内容导入计划任务 这里执行要特别小心，因为操作文件中的数据将会完全覆盖 crontab -e 编辑的计划任务，所以为了保证编辑的计划任务不丢失，可以选择将计划任务写入配置文件，再将文件通过 crontab 导入计划任务</p><p>在编辑系统中的 crond 配置文件时（cron.d目录下的），要注意写明计划所属用户</p><p><em>/2 </em> <em> </em> <em> username echo “编辑 crond 系统配置文件”</em>/2 <em> </em> <em> </em> echo “编辑 crond 系统配置文件”  // 编辑指定用户的定时任务不用指定用户</p><p>crontab 工具无法编辑 系统级别的计划任务（/etc/crontab &amp;&amp; /etc/cron.d/） </p><p>root 用户可以通过编辑系统配置文件给指定用户 配置定时任务，但是 ctontab -e -u name<br>命令编辑指定用户的计划任务时 是不能查看编辑 root指定或系统级的定时任务，但是在 定时任务执行日志中可以看到。</p><p>crontab -l  //  输出当前用户的定时任务<br>    cat /var/spool/cron/root  // crontab -l 命令实际执行的文件<br>    /var/log/  // 该目录下存放系统的日志文件 包括有 cron 定时任务的日志 ll cron* 查看<br>    /var/spool/mail/  // 系统会将任务执行信息已邮件的形式发送给 root 用户。 </p><pre><code>ll -a  // 查看当前用户家目录中的隐藏文件在 root 家目录中有 .bash_profile 文件，是系统环境变量的配置文件。在修改完成 .bash_profile 配置文件之后 执行 source .bash_profile 命令 重新载入配置文件执行 echo $PATH // 输出 文件中设置号的环境变量</code></pre><p>易错<br>    在计划任务的脚本中会经常用到 在 .bash_profile 预设好的系统环境变量,但是这些变量 可以在命令中被识别出来，不一定在执行脚本中也能够被识别。</p><pre><code>第三域 和 第五域 是 互为 ”或“ 关系；test `date +%w` -eq 0 || 1 || 2 || ... echo $? // 输出 0 标表示上述判断 成功 ， 输出 1 表示上述判断失败。在命令行中使用 test 做判断时 要注意避免使用 = 号做判断，因为 test 会将 1=0 整体作为一个字符串处理 (test abd)必须使用 = 号时，在 = 前后加空格   1 = 0   test 1 = 0 &amp;&amp; echo hello   // 在 test 判断成立时 输出 hello       &amp;&amp; 对应的是 ||四月的第一个星期日早上1时59分运行a.sh59 1 1-7 4 0 /root/a.sh             // 因为 第三域 和 第五域 互为 或 关系 任务会执行 10次59 1 1-7 4 * test `date +\%w` -eq 0 &amp;&amp; /root/a.sh     // 在定时任务中加上对于星期的判断 避免上述问题，这里要注意 在命令行中看可以直接输出 date +%w 但是在 脚本中要对 % 号进行转义分钟设置误用 要注意 * 号 表示任意时刻都可执行    两小时运行一次    * */2 * * * /root/a.sh // 错误    0 */2 * * * /root/a.sh // 正确crantab 最小执行单位是分钟，但是可以借助 sleep 命令 将最小执行单数扩展到秒    */1 * * * * date &gt;&gt; /tmp/date.log    */1 * * * * sleep 30s; date &gt;&gt; /tmp/date.log  // sleep 0.5s上述借用 sleep 可以实现 定时任务在每分钟执行两次</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Imooc 视频笔记&lt;/p&gt;
&lt;p&gt;检查 cron 服务&lt;br&gt;    – 检查 Crontab 工具是否安装：crontab -l&lt;br&gt;    – 检查 crond 服务是否启动 service crond status&lt;/p&gt;
&lt;p&gt;安装 cron&lt;br&gt;    – 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>常用汇总</title>
    <link href="http://www.loy7778.cn/2018/%E5%B8%B8%E7%94%A8%E6%B1%87%E6%80%BB/"/>
    <id>http://www.loy7778.cn/2018/常用汇总/</id>
    <published>2018-06-10T02:22:06.000Z</published>
    <updated>2018-06-12T12:57:48.655Z</updated>
    
    <content type="html"><![CDATA[<p>常用header头设置<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">header(<span class="string">"Access-Control-Allow-Origin: *"</span>);</span><br><span class="line">header(<span class="string">"Access-Control-Allow-Methods:OPTIONS,POST,GET"</span>);</span><br><span class="line">header(<span class="string">"Access-Control-Allow-Headers:*"</span>);</span><br><span class="line">header(<span class="string">"Access-Control-Allow-Credentials:true"</span>);</span><br><span class="line">session_start();</span><br><span class="line">header(<span class="string">"content-type:text/html;charset=utf-8"</span>);</span><br><span class="line">date_default_timezone_set('PRC'); </span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>sql 常用函数<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">FROM_UNIXTIME(a.addtime, '%Y-%m-%d');</span><br><span class="line"></span><br><span class="line">TP 动态查询</span><br><span class="line">$c_cid = M('Article')-&gt;getFieldById($aid[0],'cid');</span><br><span class="line">TP 获取sql语句</span><br><span class="line">-&gt;fetchSql()不执行SQL而只是返回SQL布尔值 连贯操作</span><br><span class="line">M()-&gt;getLastSql()    M()-&gt;_sql()   获取最后一条执行的SQL语句</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>常用Linux命令<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mysql --version </span><br><span class="line">php -v</span><br><span class="line">httpd -v</span><br><span class="line">cat /etc/redhat-release 查看当前linux 版本</span><br><span class="line">/usr/local/php/bin/php -i |less  查看配置文件在哪里，编译参数</span><br><span class="line">/usr/local/php/bin/php -m |less  查看php加载的模块</span><br><span class="line"></span><br><span class="line">which 文件名 查找文件所在目录</span><br><span class="line"></span><br><span class="line">df -hl 磁盘使用空间 </span><br><span class="line">dump 快速导出mysql数据</span><br><span class="line">mysqldump -h shujukudizhi -uyonghu -pmima globalsummit &gt; globalsummit.sql</span><br><span class="line">du 命令查看文件大小</span><br><span class="line"></span><br><span class="line">使用ZIP属性压缩目录时 记得 -r</span><br><span class="line">zip -r  mcc01.zip mcc01</span><br><span class="line">cp -rf /home/<span class="number">1.</span>txt  /opt/  (如果复制的是目录的话，必须需要加上 -rf  参数)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>配置文件常用项<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">php.ini</span><br><span class="line">file_uploads = On <span class="meta"># 支持HTTP上传</span></span><br><span class="line">upload_tmp_dir = <span class="meta"># 临时文件保存目录</span></span><br><span class="line">upload_max_filesize = <span class="number">2</span>M <span class="meta"># 允许上传文件的最大值</span></span><br><span class="line">max_file_uploads = <span class="number">20</span> <span class="meta"># 允许一次上传的最大文件数</span></span><br><span class="line">post_max_size = <span class="number">8</span> <span class="meta"># POST方式发送数据的最大值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Win10 hosts 位置</span><br><span class="line">c:\Windows\System32\Drivers\etc</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>PHP 常用常量<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">声明常量 </span><br><span class="line">如何需要设置常量，可以使用define(constantName, constantValue, isCase)函数，它使用三个参数：</span><br><span class="line">第一个参数定义常量的名称</span><br><span class="line">第二个参数定义常量的值</span><br><span class="line">第三个参数是可选的，规定常量名是否对大小写敏感。默认是<span class="literal">false</span>。</span><br><span class="line"></span><br><span class="line">?</span><br><span class="line">系统常量 </span><br><span class="line">__dir__ 或者 dirname()</span><br><span class="line">__FILE__ 当前PHP文件的相对路径</span><br><span class="line">__LINE__ 当前PHP文件中所在的行号</span><br><span class="line">__FUNCTION__ 当前函数名，只对函数内调用起作用</span><br><span class="line">__CLASS__ 当前类名，只对类起作用</span><br><span class="line">PHP_VERSION 当前使用的PHP版本号</span><br><span class="line">PHP_OS 当前PHP环境的运行操作系统</span><br><span class="line"><span class="literal">TRUE</span> 与<span class="literal">true</span>一样</span><br><span class="line"><span class="literal">FALSE</span> 与<span class="literal">false</span>一样</span><br><span class="line">M_PI 圆周率常量值</span><br><span class="line">M_E 科学常数e</span><br><span class="line">M_LOG2E 代表log2 </span><br><span class="line">e，以<span class="number">2</span>为底e的对数</span><br><span class="line">M_LOG10E 代表lg </span><br><span class="line">e，以<span class="number">10</span>为底e的对数</span><br><span class="line">M_LN2 <span class="number">2</span>的自然对数</span><br><span class="line">M_LN10 <span class="number">10</span>的自然对数</span><br><span class="line">E_ERROR 最近的错误之处</span><br><span class="line">E_WARNING 最近的警告之处</span><br><span class="line">E_PARSE 剖析语法有潜在问题之处</span><br><span class="line">__METHOD__ 表示类方法名，比如B::test</span><br><span class="line">服务器全局变量 </span><br><span class="line">$_SERVER 返回服务器相关信息，返回一个数组</span><br><span class="line">$_GET 所有GET请求过来的参数</span><br><span class="line">$_POST 所有POST过来的参数</span><br><span class="line">$_COOKIE 所有HTTP提交过来的cookie</span><br><span class="line">$_FILES 所有HTTP提交过来的文件</span><br><span class="line">$_ENV 当前的执行环境信息</span><br><span class="line">$_REQUEST 相当于$_POST、$_GET、$_COOKIE提交过来的数据，因此这个变量不值得信任</span><br><span class="line">$_SESSION session会话变量</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>关于正则<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">strip_tags()</span><br><span class="line">该函数尝试返回给定的字符串 str 去除空字符、HTML 和 PHP 标记后的结果。它使用与函数 fgetss() 一样的机制去除标记。</span><br><span class="line"></span><br><span class="line">去除 html 标签</span><br><span class="line">$Artlist[<span class="number">0</span>][content] = htmlspecialchars_decode($Artlist[<span class="number">0</span>][content]);</span><br><span class="line">$Artlist[<span class="number">0</span>][content] = preg_replace( <span class="string">"@&lt;script(.*?)&lt;/script&gt;@is"</span>, <span class="string">""</span>, $Artlist[<span class="number">0</span>][content] );   </span><br><span class="line">$Artlist[<span class="number">0</span>][content] = preg_replace( <span class="string">"@&lt;iframe(.*?)&lt;/iframe&gt;@is"</span>, <span class="string">""</span>, $Artlist[<span class="number">0</span>][content] );   </span><br><span class="line">$Artlist[<span class="number">0</span>][content] = preg_replace( <span class="string">"@&lt;style(.*?)&lt;/style&gt;@is"</span>, <span class="string">""</span>, $Artlist[<span class="number">0</span>][content] );   </span><br><span class="line">$Artlist[<span class="number">0</span>][content] = preg_replace( <span class="string">"@&lt;(.*?)&gt;@is"</span>, <span class="string">""</span>, $Artlist[<span class="number">0</span>][content] );  </span><br><span class="line"></span><br><span class="line"><span class="comment">/*/&lt;(?!\/?br\/?.+?&gt;|\/?img.+?&gt;)[^&lt;&gt;]*&gt;/gi*/</span> <span class="comment">// 去除html标签 并保留 br 和 img 但是 g 会引起报错</span></span><br><span class="line">$a = preg_replace( '/&lt;(?!\/?br\/?.+?&gt;|\/?img.+?&gt;)[^&lt;&gt;]*&gt;/i', "", $a );  </span><br><span class="line"></span><br><span class="line">用户邮箱验证</span><br><span class="line">function is_email($email)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (preg_match(<span class="string">"/[a-za-z0-9]+@[a-za-z0-9]+.[a-z]&#123;2,4&#125;/"</span>,$email,$mail))</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> 验证用户名是否以字母开头</span><br><span class="line"></span><br><span class="line">function is_user_name($user)</span><br><span class="line"> &#123;</span><br><span class="line">  <span class="keyword">if</span> (preg_match(<span class="string">"/^[a-za-z]&#123;1&#125;([a-za-z0-9]|[._])&#123;3,19&#125;$/"</span>,$user,$username))</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> 验证密码只能为数字和字母的组合</span><br><span class="line"></span><br><span class="line">function is_psd($psd)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (preg_match(<span class="string">"/^(w)&#123;4,20&#125;$/"</span>,$psd,$password))</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">正则表达式中/i,/g,/ig,/gi,/m的区别和含义</span><br><span class="line">/i (忽略大小写)</span><br><span class="line">/g (全文查找出现的所有匹配字符)</span><br><span class="line">/m (多行查找)</span><br><span class="line">/gi(全文查找、忽略大小写)</span><br><span class="line">/ig(全文查找、忽略大小写)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  域名正则式</span></span><br><span class="line">    const URLRULE         ='/^http[s]?:\/\/(([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;|([0-9a-z_!~*\'()-]+\.)*([0-9a-z][0-9a-z-]&#123;0,61&#125;)?[0-9a-z]\.[a-z]&#123;2,6&#125;)(:[0-9]&#123;1,4&#125;)?((\/\?)|(\/[0-9a-zA-Z_!~\*\'\(\)\.;\?:@&amp;=\+\$,%#-\/]*)?)$/';</span><br><span class="line">    <span class="comment">//固定号码</span></span><br><span class="line">    const TELEPARSE        = '/^[048]\d&#123;2,3&#125;-?\d&#123;3,4&#125;-?\d&#123;3,4&#125;(-\d&#123;1,&#125;)?$/';</span><br><span class="line">    <span class="comment">//手机号码</span></span><br><span class="line">    const MOBILEPARSE  = '/^(\+?86-?)?(18|17|15|13)[0-9]&#123;9&#125;$/';</span><br><span class="line">    <span class="comment">//电话号码</span></span><br><span class="line">    const PHOTOPARSE    = '/(^(\+?86-?)?(18|17|15|14|13)[0-9]&#123;9&#125;$)|(^[048]\d&#123;2,3&#125;-?\d&#123;3,4&#125;-?\d&#123;3,4&#125;(-\d&#123;1,&#125;)?$)/';</span><br><span class="line">    <span class="comment">//时间格式</span></span><br><span class="line">    const DATERULE     = '/^\\d&#123;4&#125;[-](0?[1-9]|1[012])[-](0?[1-9]|[12][0-9]|3[01])(\s+(0?[0-9]|[12][0-3]):(0?[0-9]|[1-5][1-9]):(0?[0-9]|[1-5][1-9]))?$/';</span><br><span class="line">   <span class="comment">//邮箱地址   </span></span><br><span class="line">    const MAILPARSE   = '/^([0-9A-Za-z\\-_\\.]+)@([0-9a-z]+\\.[a-z]&#123;2,3&#125;(\\.[a-z]&#123;2&#125;)?)$/i';</span><br><span class="line">    <span class="comment">//浮点数</span></span><br><span class="line">    const FLOAT            = '/^\\d+(\\.\\d+)?$/';</span><br><span class="line">    <span class="comment">//最多只能有两位小数</span></span><br><span class="line">    const TWODECIMAL   = '/^\\d+(\\.\\d&#123;0,2&#125;+)?$/';</span><br><span class="line">    <span class="comment">//数字</span></span><br><span class="line">    const INTEGER      = '/^[0-9]*$/';</span><br><span class="line">    <span class="comment">//"2090009973,2089948681"</span></span><br><span class="line">    const SPLIT_INTEGER = '/^(\d[,]?)*$/';</span><br><span class="line">    <span class="comment">//无特殊字符</span></span><br><span class="line">    const CHINESE      = '/^[\x&#123;4e00&#125;-\x&#123;9fa5&#125; A-Za-z0-9\-_\*\!\@\#\%\&amp;\(\)\,\.]+$/u';</span><br><span class="line">    <span class="comment">//只能是0或者1</span></span><br><span class="line">    const ZORE_OR_ONE  = '/^[0|1]*$/';</span><br><span class="line">    <span class="comment">//连续出现两个&#123;</span></span><br><span class="line">    <span class="keyword">const</span> CONTINUOUS_BRACE = <span class="string">"/(&#123;[^&#123;^&#125;]+&#125;\s*)&#123;2&#125;/"</span>;</span><br><span class="line">    <span class="comment">//四个&#123;&#125;</span></span><br><span class="line">    <span class="keyword">const</span> THREE_BRACE = <span class="string">"/(.*&#123;.*&#125;.+)&#123;4,&#125;/"</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;常用header头设置&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/spa
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>不常遇到</title>
    <link href="http://www.loy7778.cn/2018/%E4%B8%8D%E5%B8%B8%E9%81%87%E5%88%B0/"/>
    <id>http://www.loy7778.cn/2018/不常遇到/</id>
    <published>2018-06-01T03:37:03.000Z</published>
    <updated>2018-06-14T11:14:36.630Z</updated>
    
    <content type="html"><![CDATA[<p>其实这里东西也挺重要的，要经常看，持续更新。</p><p>Http 请求更新一发<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HTTP <span class="number">415</span> 错误 – 不支持的媒体类型(Unsupported media type)</span><br><span class="line"></span><br><span class="line"><span class="number">415</span> 报错不常遇见，在发起请求的header头中设置对应的数据格式即可。</span><br><span class="line"></span><br><span class="line">PHP curl:</span><br><span class="line">    $header = ['Content-Type:application/json'];</span><br><span class="line">    curl_setopt($ch, CURLOPT_HTTPHEADER, $header);</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>首先第一个，微信授权相关的。<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">开发授权、分享需要数据整理</span><br><span class="line">微信 Oauth 和 微信 Share</span><br><span class="line"><span class="number">1</span>、提供已经认证过的微信公众号的 AppID 和 AppSecret</span><br><span class="line"><span class="number">2</span>、在微信公众平台 设置 使用的服务器对应的 IP 地址到白名单里面</span><br><span class="line"><span class="number">3</span>、在微信公众平台 设置 安全回调地址 用以获取 access_token</span><br><span class="line"><span class="number">4</span>、在微信公众平台 设置微信 JSSDK 分享安全域名</span><br><span class="line"></span><br><span class="line">微信授权处理过程中，发现OAuth2跳转过程极慢。以下为分析问题思路：</span><br><span class="line"><span class="number">1</span>、先确定服务器连接到微信服务器的速度</span><br><span class="line"><span class="number">2</span>、在服务器里面尝试增加其他的dns试试</span><br><span class="line"><span class="number">3</span>、看看curl代码有没有指定过期时间</span><br><span class="line"><span class="number">4</span>、去微信后台看统计数据，它有api调用的记录</span><br><span class="line"><span class="number">5</span>、我们自己也调用微信接口，没存在这种情况</span><br><span class="line"></span><br><span class="line">最后解决</span><br><span class="line">找到机器中的 hosts 文件添加以下DNS解析记录</span><br><span class="line"><span class="number">58.246</span><span class="number">.220</span><span class="number">.31</span> api.weixin.qq.com</span><br><span class="line"><span class="number">223.167</span><span class="number">.86</span><span class="number">.71</span> open.weixin.qq.com</span><br><span class="line">按道理阿里的DNS不应该这么慢的，不知道是什么原因（真的是要打架吗 = ，=!）。</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>Git 提交<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">warning: LF will be replaced by CRLF <span class="keyword">in</span> ......    </span><br><span class="line">The file will have its original line endings <span class="keyword">in</span> your working directory.   </span><br><span class="line">上面报错的原因是：</span><br><span class="line">原因是路径中存在 / 的符号转义问题，<span class="literal">false</span>就是不转换符号默认是<span class="literal">true</span>，相当于把路径的 / 符号进行转义，这样添加的时候就有问题</span><br><span class="line">解决方法：</span><br><span class="line">git config --global core.autocrlf <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fatal: HttpRequestException encountered 致命报错</span><br><span class="line">原因：</span><br><span class="line">Github 禁用了TLS v1<span class="number">.0</span> and v1<span class="number">.1</span>，必须更新Windows的git凭证管理器。</span><br><span class="line">解决：</span><br><span class="line">https:<span class="comment">//github.com/Microsoft/Git-Credential-Manager-for-Windows/releases/tag/v1.14.0</span></span><br><span class="line">下载客户端 ： GCMW<span class="number">-1.14</span><span class="number">.0</span>.exe</span><br><span class="line">安装之后报错就会消失。</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>PHP 函数系列</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在合并多个数组并统一排序时会用到</span><br><span class="line">array_multisort() <span class="comment">// 可以用来一次对多个数组进行排序，或者根据某一维或多维对多维数组进行排序。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;其实这里东西也挺重要的，要经常看，持续更新。&lt;/p&gt;
&lt;p&gt;Http 请求更新一发&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PHP CURL</title>
    <link href="http://www.loy7778.cn/2018/PHP-CURL/"/>
    <id>http://www.loy7778.cn/2018/PHP-CURL/</id>
    <published>2018-05-20T10:07:50.000Z</published>
    <updated>2018-06-12T10:20:58.530Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">近期项目中需要和客户对接接口，接口中需要添加header头信息进行安全验证。</span><br><span class="line">然后就是无情翻车，最后查到原因是 PHP中 md5() 函数出来的加密序列默认是<span class="number">32</span>位，</span><br><span class="line">md5($sign, <span class="literal">true</span>); 第二参数设置为 <span class="literal">true</span> 时会返回<span class="number">16</span>位加密序列，但是<span class="number">16</span>位加密序列包含不可显示字符，无法验证通过。</span><br><span class="line">（这里标识下，通过网站上面进行md5获得的<span class="number">16</span>位的加密序列实际上是<span class="number">32</span>序列截取中间<span class="number">16</span>位之后的结果。）</span><br></pre></td></tr></table></figure><p>这里贴上 php curl 封装的 post 和 get 请求，之前用https竟然死活请求不成功，更换为http才能行。<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">function req_post($url = '', $param = '') &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (empty($url) || empty($param)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $appkey = '*******';</span><br><span class="line">    $appsecret = '****************************';</span><br><span class="line">    $timespan = time();</span><br><span class="line">    $guid = rand(<span class="number">1000</span>,<span class="number">9999</span>);</span><br><span class="line">    $platform = 'sign';</span><br><span class="line">    $sign = $appkey.<span class="string">'|'</span>.$timespan.<span class="string">'|'</span>.$guid.<span class="string">'|'</span>.$platform.<span class="string">'|'</span>.$appsecret;</span><br><span class="line">    $sign = strtoupper(md5($sign, <span class="literal">false</span>));</span><br><span class="line"></span><br><span class="line">    $postUrl = $url;</span><br><span class="line">    $curlPost = $param;</span><br><span class="line">    $ch = curl_init();<span class="comment">//初始化curl</span></span><br><span class="line">    curl_setopt($ch, CURLOPT_URL,$postUrl);<span class="comment">//抓取指定网页</span></span><br><span class="line">    <span class="comment">// curl_setopt($ch, CURLOPT_HEADER, 0);//设置header</span></span><br><span class="line">    $header = ['platform:sign','timespan:'.$timespan,'guid:'.$guid,'sign:'.$sign]; //设置一个你的浏览器agent的header</span><br><span class="line">    curl_setopt($ch, CURLOPT_HTTPHEADER, $header);</span><br><span class="line">    curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);<span class="comment">// 要求结果为字符串且输出到屏幕上</span></span><br><span class="line">    curl_setopt($ch, CURLOPT_POST, <span class="number">1</span>);<span class="comment">//post提交方式</span></span><br><span class="line">    curl_setopt($ch, CURLOPT_POSTFIELDS, $curlPost);</span><br><span class="line">    $data = curl_exec($ch);<span class="comment">//运行curl</span></span><br><span class="line">    curl_close($ch);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> $data;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function get1($url) &#123;</span><br><span class="line">    $appkey = '********';</span><br><span class="line">    $appsecret = '*******************';</span><br><span class="line">    $timespan = time();</span><br><span class="line">    $guid = rand(<span class="number">1000</span>,<span class="number">9999</span>);</span><br><span class="line">    $platform = 'sign';</span><br><span class="line">    $sign = $appkey.<span class="string">'|'</span>.$timespan.<span class="string">'|'</span>.$guid.<span class="string">'|'</span>.$platform.<span class="string">'|'</span>.$appsecret;</span><br><span class="line">    $sign = strtoupper(md5($sign, <span class="literal">false</span>));</span><br><span class="line">    $ch = curl_init();</span><br><span class="line">    curl_setopt($ch, CURLOPT_HTTPGET, <span class="literal">true</span>);</span><br><span class="line">    curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>); <span class="comment">//TRUE 将curl_exec()获取的信息以字符串返回，而不是直接输出。</span></span><br><span class="line">    <span class="comment">// $header = ['User-Agent: php test']; //设置一个你的浏览器agent的header</span></span><br><span class="line">    $header = ['platform:sign','timespan:'.$timespan,'guid:'.$guid,'sign:'.$sign]; //设置一个你的浏览器agent的header</span><br><span class="line">    curl_setopt($ch, CURLOPT_HTTPHEADER, $header);</span><br><span class="line">    curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>); <span class="comment">//返回response头部信息</span></span><br><span class="line">    curl_setopt($ch, CURLINFO_HEADER_OUT, <span class="literal">true</span>); <span class="comment">//TRUE 时追踪句柄的请求字符串，从 PHP 5.1.3 开始可用。这个很关键，就是允许你查看请求header</span></span><br><span class="line">    curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">    $result = json_decode(curl_exec($ch), <span class="literal">true</span>);</span><br><span class="line">    <span class="comment">// echo curl_getinfo($ch, CURLINFO_HEADER_OUT); //官方文档描述是“发送请求的字符串”，其实就是请求的header。这个就是直接查看请求header，因为上面允许查看</span></span><br><span class="line">    curl_close($ch);</span><br><span class="line">    <span class="keyword">return</span> $result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Python学习之Turtle</title>
    <link href="http://www.loy7778.cn/2018/Python%E5%AD%A6%E4%B9%A0%E4%B9%8BTurtle/"/>
    <id>http://www.loy7778.cn/2018/Python学习之Turtle/</id>
    <published>2018-05-12T09:12:44.000Z</published>
    <updated>2018-06-12T10:04:55.452Z</updated>
    
    <content type="html"><![CDATA[<p>第一次接触 Python 时是看小甲鱼的课程(哈哈~算是打个广告吧)“打飞机”游戏，之后因为零零碎碎的原因(其实就是懒= 。=)，学习总是断断续续的。Python 在图像处理这块确实比PHP要厉害。<br>在博客中记录下 学习过程，防止过后又忘（不常用肯定会忘的啊）！</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">还有一点感悟就是，再看一些教程的时候总是很浮躁，固然能实现一些示例，但是往往会忽视一些比较基础的语法和概念。</span><br><span class="line">写代码的时候很少能感受出来，因为很多时候都是念着尽快实现功能，不会去想会不会有更好的实现方式，而更好的</span><br><span class="line">实现方式实际上是离不开对一门语言进行透彻的理解的。所以在时间不是特别紧的时候，一定要注意一些基础的东西。</span><br></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Python <span class="number">33</span> 个保留字</span><br><span class="line">and elif import raise global </span><br><span class="line">as <span class="keyword">else</span> <span class="keyword">in</span> <span class="keyword">return</span> nonlocal</span><br><span class="line">assert except is try ture</span><br><span class="line"><span class="keyword">break</span> finally lambda <span class="keyword">while</span> False</span><br><span class="line"><span class="keyword">class</span> <span class="keyword">for</span> not with None</span><br><span class="line"><span class="keyword">continue</span> from or yield</span><br><span class="line">def <span class="keyword">if</span> pass del</span><br></pre></td></tr></table></figure><p>Python 基础数据类型处理<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">浮点数类型的运算存在不确定尾数，不是Bug  <span class="number">0.1</span> + <span class="number">0.2</span> 不等于 <span class="number">0.3</span></span><br><span class="line">原因 <span class="number">0.1</span> 在机器语言中用 <span class="number">53</span>位二进制表示小数部分， 约 <span class="number">10</span> 的 负<span class="number">16</span>次方</span><br><span class="line">二进制 和 十进制 不是完全对等的关系 二进制表示小数可以无限接近<span class="number">10</span>进制的小数，但不完全相同。</span><br><span class="line"></span><br><span class="line">在浮点数间运算及比较用round()函数辅助</span><br><span class="line"></span><br><span class="line">浮点数可以采用科学计数法表示</span><br><span class="line">使用字母 e 或 E 作为幂的符号，以<span class="number">10</span>为基数，格式如下</span><br><span class="line">&lt;a&gt;e&lt;b&gt; 表示 a*<span class="number">10</span>的b次方</span><br><span class="line"></span><br><span class="line">复数类型</span><br><span class="line">与数学中复数的概念一致</span><br><span class="line">定义 j  = 根号 (<span class="number">-1</span>) ，以此为基础，构建数学体系</span><br><span class="line">a+bj 被称为复数 ， 其中 a 是实部，b 是虚部。</span><br><span class="line">z = <span class="number">1.23e-4</span> + <span class="number">5.6</span>e + <span class="number">89</span>j </span><br><span class="line">z.real 获取实部</span><br><span class="line">z.imag 获取虚部</span><br><span class="line"></span><br><span class="line">x/y  <span class="comment">// 两数相除 获取浮点数结果</span></span><br><span class="line">x<span class="comment">//y // 整数除，x 与 y 之商 10//3 == 3</span></span><br><span class="line">x%y  <span class="comment">// 余数，模运算 10%3 == 1</span></span><br><span class="line">x**y <span class="comment">// 幂运算，x 的 y 次幂，当 y 是小数时，进行开方运算，10**0.5 结果是 根号10</span></span><br><span class="line"></span><br><span class="line">数值运算函数</span><br><span class="line">abs(x)<span class="comment">// 获取 x 的绝对值</span></span><br><span class="line">divmod(x, y)<span class="comment">// 商余，同时输出 商 和 余数</span></span><br><span class="line">pow(x, y [,z])  <span class="comment">// (x**y)%z , [,z] 表示参数 z 可省略。</span></span><br><span class="line">pow(<span class="number">3</span>, pow(<span class="number">3</span>, <span class="number">99</span>), <span class="number">10000</span>); <span class="comment">// 结果为 4587 ，不求余的话 一半计算机是无法计算出这么大的数值的</span></span><br><span class="line">round(x, d) <span class="comment">// 对 x 进行四舍五入，d 是小数截取位数。</span></span><br><span class="line">max(x1, x2 ... xn) <span class="comment">// 获取最大值</span></span><br><span class="line">min(x1, x2 ... xn) <span class="comment">// 获取最小值</span></span><br><span class="line"><span class="keyword">int</span>(x) <span class="comment">// 将 x 变成整数，舍弃小数部分</span></span><br><span class="line"><span class="keyword">float</span>(x) <span class="comment">// 将 x 变成浮点数，增加小数部分</span></span><br><span class="line">complex(x)<span class="comment">// 将 x 变成复数，增加其虚数部分。</span></span><br><span class="line"></span><br><span class="line">i%<span class="number">7</span> <span class="keyword">in</span> [<span class="number">6</span>,<span class="number">0</span>]  <span class="comment">// 365 天休息日</span></span><br><span class="line"></span><br><span class="line">字符串处理函数</span><br><span class="line"></span><br><span class="line">以 三个单引号 <span class="string">'''</span> 表示的字符 若没有赋值给任何变量 可以被作为注释使用</span><br><span class="line"></span><br><span class="line">将一段字符逆序排列 '123456'[::-1]</span><br><span class="line"></span><br><span class="line">3*'nn' 或 'nn'*3  // 将 nn 字符串 连续输出3次</span><br><span class="line">字符串拼接 使用+</span><br><span class="line"></span><br><span class="line">len(x) <span class="comment">// 返回字符串长度</span></span><br><span class="line">set(x) <span class="comment">// 返回任意类型 x 对应的字符串形式</span></span><br><span class="line">hex(x) 或 oct(x) 整数 x 的十六进制或八进制小写形式字符串</span><br><span class="line"></span><br><span class="line">chr(x) <span class="comment">// x 为Unicode编码 , 返回其对应的字符</span></span><br><span class="line">ord(x) <span class="comment">// x 为字符 , 返回其对应的Unicode编码</span></span><br><span class="line"></span><br><span class="line">Python 的字符编码嗾使 Unicode编码 <span class="comment">// chr(10004) -&gt; 输出 对勾</span></span><br><span class="line">chr(<span class="number">9800</span>) <span class="comment">//  输出白羊座的图标</span></span><br><span class="line">循环输出 <span class="number">12</span> 星座图标</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">12</span>):</span><br><span class="line">    a = <span class="number">9800</span>+i;</span><br><span class="line">    print(chr(a),end = '\n\r');</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">字符串处理方法</span><br><span class="line">str.lower() 或 str.supper() <span class="comment">// 返回字符串的副本,全部字符小写/大写</span></span><br><span class="line">str.split(sep=None) <span class="comment">// 返回有 sep 分割的 str 之后组成的数组</span></span><br><span class="line">str.count(sup) <span class="comment">// 计算 su 在str中出现的次数</span></span><br><span class="line">str.replace(old, new) <span class="comment">// 发返回字符串str副本,所有old子字符串被替换为new.</span></span><br><span class="line">str.center(width[,fillchar]) <span class="comment">// 字符串 str 根据宽度居中,width为要输出的字符宽度, fillchar为居中后字符两侧需填充的内容.</span></span><br><span class="line">str.strip(chars) <span class="comment">// 从 str 中去掉左侧和由此char中列出的所有字符 区分大小写</span></span><br><span class="line"><span class="string">"= Python="</span>.strip(<span class="string">" =np"</span>)</span><br><span class="line">str.join(iter) <span class="comment">// 将字符 iter 中的每个元素后增加一个 str</span></span><br><span class="line"><span class="string">","</span>.join(<span class="string">"1234"</span>) <span class="comment">// 主要用于分割字符</span></span><br><span class="line"></span><br><span class="line">字符类型的格式化</span><br><span class="line">&lt;模板字符串&gt;.format(&lt;逗号分隔的参数&gt;)</span><br><span class="line"><span class="string">"&#123;1&#125;:计算机&#123;0&#125;的CPU占用率&#123;2&#125;%"</span>.format(<span class="string">"2018-10-10"</span>, <span class="string">"C"</span>, <span class="string">"10"</span>);</span><br><span class="line">&#123;&#125; 表示槽 , 槽中的参数序号 和 format 中参数一一对应</span><br><span class="line"></span><br><span class="line">槽内部对格式化的配置方式</span><br><span class="line">&#123;&lt;参数序号&gt; : &lt;格式控制标记&gt;&#125;</span><br><span class="line"></span><br><span class="line">格式控制标记</span><br><span class="line"></span><br><span class="line">: 引导符号</span><br><span class="line">&lt;填充&gt;</span><br><span class="line">&lt;对齐&gt; &gt; 右对齐 &lt; 左对齐 ^ 居中对齐</span><br><span class="line">&lt;宽度&gt; 槽设定的输出宽度</span><br><span class="line"></span><br><span class="line">&lt; , &gt; 数字的千位分隔符</span><br><span class="line">&lt;.精度&gt; 浮点数小数精度 或 字符串最大的输出长度 </span><br><span class="line">&lt;类型&gt; 整数类型 b,c,d,o,x,X ;浮点数类型 e,E,f,%</span><br><span class="line"></span><br><span class="line"><span class="string">"&#123;0:=^20&#125;"</span>.format(<span class="string">"Python"</span>);</span><br><span class="line"></span><br><span class="line"><span class="string">"&#123;0:,.2f&#125;"</span>.format(<span class="number">123456.444</span>);</span><br><span class="line"><span class="string">"&#123;0:b&#125;,&#123;0:c&#125;,&#123;0:d&#125;,&#123;0:o&#125;,&#123;0:x&#125;,&#123;0:X&#125;"</span>.format(<span class="number">425</span>);</span><br><span class="line"><span class="string">"&#123;0:e&#125;,&#123;0:E&#125;,&#123;0:f&#125;,&#123;0:%&#125;"</span>.format(<span class="number">425</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">程序的异常处理</span><br><span class="line"></span><br><span class="line">try : </span><br><span class="line"></span><br><span class="line">&lt;语句块<span class="number">1</span>&gt;</span><br><span class="line"></span><br><span class="line">except [&lt;异常类型&gt;]: <span class="comment">// 在设置异常类型之后，try 语句块 只能响应设置后的异常类型</span></span><br><span class="line"></span><br><span class="line">&lt;语句块<span class="number">2</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">程序异常高级处理</span><br><span class="line"></span><br><span class="line">try : </span><br><span class="line"></span><br><span class="line">&lt;语句块<span class="number">1</span>&gt;</span><br><span class="line"></span><br><span class="line">except : </span><br><span class="line"></span><br><span class="line">&lt;语句块<span class="number">2</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> : </span><br><span class="line"></span><br><span class="line">&lt;语句块<span class="number">3</span>&gt;</span><br><span class="line"></span><br><span class="line">finally :</span><br><span class="line"></span><br><span class="line">&lt;语句块<span class="number">4</span>&gt;</span><br><span class="line"></span><br><span class="line">finally 所对应 语句块<span class="number">4</span> 一定执行</span><br><span class="line"><span class="keyword">else</span> 所对应 语句块<span class="number">3</span> 在不发生异常时执行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">注意一个 <span class="keyword">break</span> 关键字 只能跳出一层循环。</span><br><span class="line"></span><br><span class="line">循环 与 <span class="keyword">else</span></span><br><span class="line">在循环语句 正常退出(不是通过 <span class="keyword">break</span> 或 <span class="keyword">continue</span> 退出)时 可以触发 <span class="keyword">else</span> 中语句块</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> <span class="string">"PYTHON"</span> :</span><br><span class="line"><span class="keyword">if</span> c == <span class="string">"T"</span> :</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">print(c, end=<span class="string">""</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">"正常退出"</span>) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> <span class="string">"PYTHON"</span>:</span><br><span class="line"><span class="keyword">if</span> c == <span class="string">"T"</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">print(c, end=<span class="string">""</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">"正常退出"</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">紧凑型的二分支结构  <span class="comment">// 这里不是语句 而是表达式，是语句的一部分，只有判断没有赋值</span></span><br><span class="line">&lt;表达式<span class="number">1</span>&gt; <span class="keyword">if</span> &lt;条件&gt; <span class="keyword">else</span> &lt;表达式<span class="number">2</span>&gt;</span><br><span class="line">guess = eval(input());</span><br><span class="line">print(<span class="string">"猜&#123;&#125;了"</span>.format(<span class="string">'对'</span> <span class="keyword">if</span> guess == <span class="number">99</span> <span class="keyword">else</span> <span class="string">'错'</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">turtle (海龟)库 是 turtle 绘图体系的 Python 实现</span><br><span class="line">turtle 绘图体系诞生于<span class="number">1969</span>年，主要用于程序设计入门</span><br><span class="line">Python 语言的标准库之一</span><br><span class="line">入门级的图形绘制函数库</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">turtle 空间坐标体系</span><br><span class="line">绝对坐标 海龟初始在 画布中心 坐标为 <span class="number">0</span>,<span class="number">0</span> </span><br><span class="line"></span><br><span class="line">海龟坐标 有前进方向、后退方向、左侧方向、右侧方向。</span><br><span class="line">fd(d) 表示海龟向 正前方运行 </span><br><span class="line">bk(d) 表示海龟向 正后方运行</span><br><span class="line">circle() 表示以海龟当前坐标的左边某一点画圆</span><br><span class="line">turtle 角度坐标体系</span><br><span class="line">绝对角度</span><br><span class="line">x 轴正方向 表示 <span class="number">0</span>/<span class="number">360</span> 度</span><br><span class="line">y 轴正方向 表示 <span class="number">90</span>/<span class="number">-270</span> 度</span><br><span class="line">seth(angle) <span class="comment">// 只改变海龟的行进方向但不行进</span></span><br><span class="line"></span><br><span class="line">海龟角度</span><br><span class="line">以海龟角度来控制 其行进角度</span><br><span class="line">left(angle)</span><br><span class="line">right(angle)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">turtle 画笔控制函数</span><br><span class="line">画笔操作后一直有效，一般成对出现</span><br><span class="line"></span><br><span class="line">turtle.penup()别名 turtle.pu() <span class="comment">// 抬起画笔，海龟在飞行</span></span><br><span class="line">turtle.pendown() 别名 turtle.pd() <span class="comment">// 落下画笔，海龟在爬行</span></span><br><span class="line">turtle.pensize(width)别名turtle.width(width) <span class="comment">// 设置画笔宽度 </span></span><br><span class="line">turtle.pencolor(color) 为画笔设置颜色  color 为颜色字符串 或 r,g,b 值</span><br><span class="line">color 的 填写形式有 字符串，多值调用，元组</span><br><span class="line">turtle 运动控制函数</span><br><span class="line"></span><br><span class="line">turtle.forword(d) 别名 turtle.fd(d) <span class="comment">// 向前行进，走直线 d表示行进距离，可为负数</span></span><br><span class="line">turtle.circle(r, extent=None)根据半径 r 绘制 extent 角度的弧形</span><br><span class="line">r 默认圆心在海龟左侧 r 距离的位置，值为负数时，表示圆心在海归右侧</span><br><span class="line">extent 绘制角度，默认是 <span class="number">360</span>度 整圆</span><br><span class="line">程序最后加上 curcle.done() 函数之后 程序运行完成之后不会自动结束，要手动关闭窗口之后才会结束。</span><br><span class="line"></span><br><span class="line">turtle.bgcolor(); <span class="comment">// 设置画板背景颜色</span></span><br><span class="line"></span><br><span class="line">t.color('black','black'); // 设置颜色</span><br><span class="line">t.begin_fill();</span><br><span class="line"></span><br><span class="line">填充颜色</span><br><span class="line"></span><br><span class="line">t.end_fill();</span><br><span class="line"></span><br><span class="line">turtle 方向控制函数</span><br><span class="line">turtle.setheading(angle)别名 turtle.seth(angle) <span class="comment">// 只改变方向，即海龟行进角度</span></span><br><span class="line"></span><br><span class="line">在海龟视角的转向</span><br><span class="line">turtle.left(angle)</span><br><span class="line">turtle.right(angle)</span><br><span class="line"></span><br><span class="line">turtle 的RGB色彩模式</span><br><span class="line">turtle 默认采用 RGB 小数值来获取颜色 可切换为整数值</span><br><span class="line">turtle.colormode(mode)</span><br><span class="line">mode = <span class="number">1.0</span> : RGB 为小数值模式</span><br><span class="line">mode = <span class="number">255</span> : RGB 为整数值模式</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">turtle.setup(width, height, startx, starty); <span class="comment">// 设置长提的大小和位置 后两个参数可选。</span></span><br><span class="line">turtle.goto(x, y); <span class="comment">// x方向 相对于海龟初始 0,0 坐标 移动 x 单位个像素; y方向 相对于海龟初始 0,0 坐标 移动 Y 单位个像素</span></span><br><span class="line">turtle.hideturtle(); <span class="comment">// 隐藏海龟箭头</span></span><br><span class="line"></span><br><span class="line">附加常用函数</span><br><span class="line">turtle.bgcolor(<span class="string">"black"</span>); <span class="meta">#设置画面背景色</span></span><br><span class="line">turtle.bye(); <span class="meta">#退出turtle，无任何提示信息</span></span><br><span class="line">turtle.hideturtle(); <span class="meta">#隐藏画笔</span></span><br><span class="line">turtle.showturtle(); <span class="meta">#显示画笔</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">Python 标准库之 Time 库</span><br><span class="line"></span><br><span class="line">time() 获取当前时间戳，即计算机内部时间值，浮点数</span><br><span class="line">ctime() 获取当前时间并以已读方式表示，返回字符串</span><br><span class="line">gmtime() 获取当前时间，表示计算机可处理的时间格式</span><br><span class="line"></span><br><span class="line">时间格式化函数</span><br><span class="line">strftime(tpl, ts)</span><br><span class="line">tpl 是格式化模板字符串，用来定义输出效果。</span><br><span class="line">ts 是计算机内部时间类型变量</span><br><span class="line">time.strftime(<span class="string">"%Y-%m-%d"</span>, time.gmtime());</span><br><span class="line">strptime(str, tpl);</span><br><span class="line">str 是 字符串形式的时间值。</span><br><span class="line">tpl 是 格式化模板字符串，用来定义输入效果。</span><br><span class="line"></span><br><span class="line">timestr = '2018-01-26 12:10:1';</span><br><span class="line">time.strptime(timestr, <span class="string">"%Y-%m-%d %H:%M:%S"</span>);</span><br><span class="line">这里注意 strptime 函数中两个参数的 精确程度要保持一致。</span><br><span class="line"></span><br><span class="line">程序计时</span><br><span class="line"></span><br><span class="line">perf_counter()</span><br><span class="line">返回一个CPU级别的精确时间计数值，单位为秒，由于这个计数值的起点不确定，连续调用才有意义。</span><br><span class="line"></span><br><span class="line">sleep(s); <span class="comment">// 使程序停止运行 s 秒， s 可以为浮点数</span></span><br><span class="line"></span><br><span class="line">print(1,end = ''); // print 函数只有一个输出结果时，在输出完成之后默认换行。但是手动设置非首个参数的值之后，系统就会取消默认换行。</span><br><span class="line">IDLE中屏蔽了 \r 功能 单行动态刷新无法实现。</span><br><span class="line"></span><br><span class="line">文本进度条展示函数</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">这里是用 Turtle 实现的时间数码管。</span><br><span class="line"></span><br><span class="line"><span class="meta"># 数码管绘制时间</span></span><br><span class="line">import turtle as t</span><br><span class="line">t.setup(<span class="number">800</span>,<span class="number">300</span>,<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">t.pu();</span><br><span class="line">t.bk(<span class="number">300</span>);</span><br><span class="line">t.pd();</span><br><span class="line">t.pencolor('pink');</span><br><span class="line"></span><br><span class="line">def drawline(draw):</span><br><span class="line">    t.pensize(<span class="number">4</span>)</span><br><span class="line">    t.pd() <span class="keyword">if</span> draw <span class="keyword">else</span> t.pu();</span><br><span class="line">    t.fd(<span class="number">25</span>);</span><br><span class="line">    t.pu();</span><br><span class="line">    t.fd(<span class="number">5</span>);</span><br><span class="line">    t.right(<span class="number">90</span>);</span><br><span class="line">    t.fd(<span class="number">5</span>);</span><br><span class="line">    t.pd();</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">def drawdigit(x):</span><br><span class="line">    drawline(<span class="number">1</span>) <span class="keyword">if</span> x <span class="keyword">in</span> [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> drawline(<span class="number">0</span>);    </span><br><span class="line">    drawline(<span class="number">1</span>) <span class="keyword">if</span> x <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">0</span>] <span class="keyword">else</span> drawline(<span class="number">0</span>);</span><br><span class="line">    drawline(<span class="number">1</span>) <span class="keyword">if</span> x <span class="keyword">in</span> [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">0</span>] <span class="keyword">else</span> drawline(<span class="number">0</span>);</span><br><span class="line">    drawline(<span class="number">1</span>) <span class="keyword">if</span> x <span class="keyword">in</span> [<span class="number">2</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">0</span>] <span class="keyword">else</span> drawline(<span class="number">0</span>);</span><br><span class="line">    t.pu();</span><br><span class="line">    t.bk(<span class="number">5</span>);</span><br><span class="line">    t.left(<span class="number">90</span>);</span><br><span class="line">    t.fd(<span class="number">5</span>);</span><br><span class="line">    t.pd();</span><br><span class="line">    drawline(<span class="number">1</span>) <span class="keyword">if</span> x <span class="keyword">in</span> [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">0</span>] <span class="keyword">else</span> drawline(<span class="number">0</span>);</span><br><span class="line">    drawline(<span class="number">1</span>) <span class="keyword">if</span> x <span class="keyword">in</span> [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">0</span>] <span class="keyword">else</span> drawline(<span class="number">0</span>);</span><br><span class="line">    drawline(<span class="number">1</span>) <span class="keyword">if</span> x <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">0</span>] <span class="keyword">else</span> drawline(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    t.pu();</span><br><span class="line">    t.left(<span class="number">180</span>);</span><br><span class="line">    t.fd(<span class="number">10</span>);</span><br><span class="line">    t.pd();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">def main(date = '20180612'):</span><br><span class="line">    <span class="keyword">for</span> index,i <span class="keyword">in</span> enumerate(date):</span><br><span class="line">        drawdigit(eval(i));</span><br><span class="line">        t.pu();</span><br><span class="line">        <span class="keyword">if</span> index <span class="keyword">in</span> [<span class="number">3</span>,<span class="number">5</span>]:</span><br><span class="line">            t.fd(<span class="number">55</span>);</span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            t.fd(<span class="number">10</span>);</span><br><span class="line">        t.pd();</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">main();</span><br><span class="line">t.hideturtle();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其实还画了几个小时出来了一个小猪佩奇 但是因为没有封装函数，代码冗余是在是过分（好意思说？？？）就先不放源码了。<br>嘿嘿~ 效果图来一张，源码整理之后再放</p><img src="/images/Py/peiqi.jpg" class="[Py]">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第一次接触 Python 时是看小甲鱼的课程(哈哈~算是打个广告吧)“打飞机”游戏，之后因为零零碎碎的原因(其实就是懒= 。=)，学习总是断断续续的。Python 在图像处理这块确实比PHP要厉害。&lt;br&gt;在博客中记录下 学习过程，防止过后又忘（不常用肯定会忘的啊）！&lt;/p
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PHP 会话控制总结</title>
    <link href="http://www.loy7778.cn/2018/PHP-%E4%BC%9A%E8%AF%9D%E6%8E%A7%E5%88%B6%E6%80%BB%E7%BB%93/"/>
    <id>http://www.loy7778.cn/2018/PHP-会话控制总结/</id>
    <published>2018-04-02T12:14:32.000Z</published>
    <updated>2018-06-12T12:16:15.853Z</updated>
    
    <content type="html"><![CDATA[<p>Imooc 网视频笔记<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">HTTP 超文本传输协议 最大特点是无状态无连接</span><br><span class="line"></span><br><span class="line">Cookie 保存在客户端中</span><br><span class="line">内存 Cookie 由浏览器来维护，保存在内存中，浏览器关闭之后消失，存在时间短暂。</span><br><span class="line">硬盘 Cookie 保存在硬盘中，有一个过期时间，除非用户手动清除或者到达过期时间,硬盘 Cookie 不会被删除，其存在时间是长期的。</span><br><span class="line">bool setcookie ( string $name [, string $value = <span class="string">""</span> [, int $expire = <span class="number">0</span> [, string $path = <span class="string">""</span> [, string $domain = <span class="string">""</span> [, bool $secure = <span class="literal">false</span> [, bool $httponly = <span class="literal">false</span> ]]]]]] )</span><br><span class="line">$name</span><br><span class="line">指定 Cookie 的名字</span><br><span class="line">$value</span><br><span class="line">Cookie 的值</span><br><span class="line">$expire</span><br><span class="line">设置 Cookie 的过期时间，默认值为<span class="number">0</span>，单位是秒</span><br><span class="line">$path</span><br><span class="line">设置 Cookie 的有效路径，默认是当前目录及子目录有效，也可以指定目录</span><br><span class="line">$domain</span><br><span class="line">设置 Cookie 的作用域，默认在本域下</span><br><span class="line">$secure</span><br><span class="line">设置是否 Cookie 只能通过 HTTPS 传输， 默认是 False</span><br><span class="line">$httponly</span><br><span class="line">是否只能使用 HTTP 访问 Cookie ，默认是 <span class="literal">false</span> ，如果设置 True ，客户端JS就无法操作当前 Cookie 使用这个参数可以减少 XSS 攻击。 </span><br><span class="line">setcookie(<span class="string">'test_loy'</span>,<span class="string">'24'</span>,strtotime(<span class="string">'+7 day'</span>),<span class="string">'/'</span>);</span><br><span class="line"></span><br><span class="line">setrawcookie() — 发送未经 URL 编码的 cookie</span><br><span class="line">一旦设置 Cookie 后，下次打开页面时可以使用 $_COOKIE 读取。 Cookie 值同样也存在于 $_REQUEST。</span><br><span class="line">通过设置 过期时间可以删除 Cookie</span><br><span class="line">修改和删除 Cookie 的值，可以对Cookie重新设置，重新设置Cookie时要注意Cookie的有效路径是否一致。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">通过 header 操作 Cookie </span><br><span class="line">header(<span class="string">"Set-Cookie:name=value[;expires=date][;domain=domain][;path=path][;secure][;httponly]"</span>);</span><br><span class="line">header(<span class="string">"Set-Cookie:a=a1;expires="</span>.gmdate(<span class="string">'D, d M Y H:i:s \G\M\T'</span>,time()+<span class="number">3600</span>)); <span class="comment">// 添加过期时间</span></span><br><span class="line">header(<span class="string">"Set-Cookie:a=a1; httponly"</span>)); <span class="comment">// 只能通过 http 方式读取 cookie</span></span><br><span class="line">header(<span class="string">"Set-Cookie:a=a1; path=/test/a/"</span>)); <span class="comment">// 设置 Cookie 的保存目录</span></span><br><span class="line"></span><br><span class="line">以数组形式保存 Cookie </span><br><span class="line">setcookie(<span class="string">'arr[uname]'</span>,<span class="string">'loy'</span>,strtotime(<span class="string">'+7 day'</span>));</span><br><span class="line">setcookie(<span class="string">'arr[age]'</span>,<span class="string">'24'</span>,strtotime(<span class="string">'+7 day'</span>));</span><br><span class="line">setcookie(<span class="string">'arr[sex]'</span>,<span class="string">'0'</span>,strtotime(<span class="string">'+7 day'</span>));</span><br><span class="line"></span><br><span class="line">通过 JS 操作 Cookie</span><br><span class="line"></span><br><span class="line">Cookie 缺陷</span><br><span class="line">Cookie 中不要存储敏感数据，Cookie不是很安全，劫取Cookie之后可以用来Cookie欺骗</span><br><span class="line">不要把Cookie当作客户端的存储器来使用，首先每个域名允许Cookie是有限制的，根据浏览器的不同限制也不同。</span><br><span class="line">Cookie 中保存数据的最大字节数是<span class="number">4</span>K</span><br><span class="line">Cookie设置之后每次请求都会附着再HTTP的投中一起发送，造成带宽浪费。</span><br><span class="line"></span><br><span class="line">localStorage 代替 Cookie </span><br><span class="line"></span><br><span class="line">SESSION</span><br><span class="line">会话是服务器和浏览器保有共同信息的这段时间。</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>/准备建立会话时，PHP回先查看请求中是否包含 session_id ，如果没有服务器就会在自己的内存里创建一个新的变量，这个变量就是 session_id </span><br><span class="line"><span class="number">2</span>/服务器会把这个 session_id 发送到浏览器保存，一般浏览器会将这个 id 保存到 cookie 中</span><br><span class="line"><span class="number">3</span>/之后每次我的浏览器再去访问服务器的时候，都会携带 cookie 中存储的这个 session_id 这样服务器就认识这个浏览器了。</span><br><span class="line"><span class="number">4</span>/服务器端的 session_id 变量可以存储任意的会话数据，这些数据是经过序列化之后存放进去的，默认是写在文件中的。</span><br><span class="line"><span class="number">5</span>/每次浏览器访问服务器，都可以凭借自己的 session_id 到服务器的这个变量中认领自己的信息。</span><br><span class="line"><span class="number">6</span>/如果像销毁会话，可以删除会话中的数据，销毁会话文件。</span><br><span class="line"></span><br><span class="line">PHP 配置文件中 session.save_path 指定了session 的默认保存路径</span><br><span class="line">setcookie(session_name(), session_name(), time()+<span class="number">3600</span>); </span><br><span class="line">在使用 session_start() 开启会话控制时就会新生成一个 会话ID</span><br><span class="line"></span><br><span class="line">php 开启会话 session_start(); <span class="comment">// 函数根据浏览器中是否含有 session_id 来判断是否创建会话 cookie </span></span><br><span class="line">当检测到 浏览器中通过cookie传输的 session_id 不存在对应 session 文件或者浏览器中无 session_id 时，则会将 session 数据保存在新创建的 session 文件中 </span><br><span class="line">可以通过 $_SESSION 来设置和读取相关值，</span><br><span class="line">销毁 session session_destroy(); </span><br><span class="line"></span><br><span class="line">session_id(); <span class="comment">// 获取session_id</span></span><br><span class="line">session_id(<span class="number">123</span>); <span class="comment">// 指定 session_id 为123</span></span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Imooc 网视频笔记&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PHP_GD 图片合成</title>
    <link href="http://www.loy7778.cn/2018/PHP-GD-%E5%9B%BE%E7%89%87%E5%90%88%E6%88%90/"/>
    <id>http://www.loy7778.cn/2018/PHP-GD-图片合成/</id>
    <published>2018-03-25T06:18:56.000Z</published>
    <updated>2018-06-12T09:13:43.528Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间有项目需求是 将切圆的微信头像、个人属性二维码、文字信息 合成到一张图片上传到前端进行显示。<br>毕竟也是花了点时间做出来的东西，就在这里记录下吧</p><p>废话不说直接上代码<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$url_pic = <span class="string">"http://xxxxxx.bxxxn.xx/zxxx/getPic.php"</span>;  <span class="meta"># 这里是通过自己的接口获取事先存在数据库中的微信头像地址</span></span><br><span class="line">$info_header = json_decode(https_request($url_pic,$data_info));</span><br><span class="line">$url_header = $info_header-&gt;msg;</span><br><span class="line"></span><br><span class="line">function yuan_img($imgpath = 'Logo.jpg') &#123;</span><br><span class="line">$src_img = null;</span><br><span class="line">$a = getimagesize($imgpath);</span><br><span class="line"><span class="keyword">switch</span> ($a[<span class="number">2</span>]) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">$src_img = imagecreatefromgif($imgpath);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">$src_img = imagecreatefromjpeg($imgpath);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">$src_img = imagecreatefrompng($imgpath);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">echo '图片格式不正确';</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">$wh  = getimagesize($imgpath);</span><br><span class="line">$w   = $wh[<span class="number">0</span>];</span><br><span class="line">$h   = $wh[<span class="number">1</span>];</span><br><span class="line">$w   = min($w, $h);</span><br><span class="line">$h   = $w;</span><br><span class="line">$img = imagecreatetruecolor($w, $h);</span><br><span class="line"><span class="comment">//这一句一定要有</span></span><br><span class="line">imagesavealpha($img, <span class="literal">true</span>);</span><br><span class="line"><span class="comment">//拾取一个完全透明的颜色,最后一个参数127为全透明</span></span><br><span class="line">$bg = imagecolorallocatealpha($img, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">127</span>);</span><br><span class="line">imagefill($img, <span class="number">0</span>, <span class="number">0</span>, $bg);</span><br><span class="line">$r   = $w / <span class="number">2</span>; <span class="comment">//圆半径</span></span><br><span class="line">$y_x = $r; <span class="comment">//圆心X坐标</span></span><br><span class="line">$y_y = $r; <span class="comment">//圆心Y坐标</span></span><br><span class="line"><span class="keyword">for</span> ($x = <span class="number">0</span>; $x &lt; $w; $x++) &#123;</span><br><span class="line"><span class="keyword">for</span> ($y = <span class="number">0</span>; $y &lt; $h; $y++) &#123;</span><br><span class="line">$rgbColor = imagecolorat($src_img, $x, $y);</span><br><span class="line"><span class="keyword">if</span> (((($x - $r) * ($x - $r) + ($y - $r) * ($y - $r)) &lt; ($r * $r))) &#123;</span><br><span class="line">imagesetpixel($img, $x, $y, $rgbColor);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $img;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 创建目录</span></span><br><span class="line">function createfolder($destFd)</span><br><span class="line">    &#123;</span><br><span class="line">        $year = date(<span class="string">'Y'</span>);</span><br><span class="line">        $month = date(<span class="string">'m'</span>);</span><br><span class="line">        $day = date(<span class="string">'d'</span>);</span><br><span class="line">        $dirroot = dirname(__FILE__);</span><br><span class="line">        $folder = $dirroot . <span class="string">"/"</span> . $destFd . $year . <span class="string">"/"</span> . $month . <span class="string">"/"</span> . $day . <span class="string">"/"</span>;</span><br><span class="line">        <span class="keyword">if</span> (! is_dir($folder)) &#123;</span><br><span class="line">            mkdir($folder, <span class="number">0777</span>, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $folder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下载微信头像 微信头像的格式为 jpeg 最好写判断</span></span><br><span class="line"></span><br><span class="line">function download_img($url = <span class="string">""</span>, $filename = <span class="string">""</span>)</span><br><span class="line">&#123;</span><br><span class="line">    $ch = curl_init(); <span class="comment">//初始化一个curl句柄</span></span><br><span class="line">    $hd = fopen($filename,'wb'); //只写打开或新建一个二进制文件；只允许写数据</span><br><span class="line">    curl_setopt($ch,CURLOPT_URL,$url); <span class="comment">//需要获取的 URL 地址</span></span><br><span class="line">    curl_setopt($ch,CURLOPT_FILE,$hd); <span class="comment">//设置成资源流的形式</span></span><br><span class="line">    curl_setopt($ch,CURLOPT_HEADER,<span class="number">0</span>); <span class="comment">//启用时会将头文件的信息作为数据流输出。</span></span><br><span class="line">    <span class="comment">//curl_setopt($ch,CURLOPT_RETURNTRANSFER,false);//以数据流的方式返回数据,false时直接显示</span></span><br><span class="line">    curl_setopt($ch,CURLOPT_TIMEOUT,<span class="number">60</span>); <span class="comment">//设置超时时间</span></span><br><span class="line">    curl_exec($ch); <span class="comment">//执行curl</span></span><br><span class="line">    curl_close($ch); <span class="comment">//关闭curl会话</span></span><br><span class="line">    fclose($hd); <span class="comment">//关闭句柄</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// die('获取微信头像失败');</span></span><br><span class="line">$wx_pic_path = 'Logo.jpg'; # 获取威信头像失败时使用的默认图片</span><br><span class="line"><span class="keyword">if</span> ($url_header != null ) &#123;</span><br><span class="line">$path_wx = createfolder('wx_pic');</span><br><span class="line">$picname = $openid.'_WXPIC.png';</span><br><span class="line">$down_wx = download_img($url_header,$path_wx.$picname);</span><br><span class="line"><span class="keyword">if</span> ($down_wx) &#123;</span><br><span class="line">$wx_pic_path = $path_wx.$picname;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$wx_pic_path = 'Logo.jpg';</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;!--切圆 Begin  被获取之前变圆形--&gt;</span><br><span class="line"></span><br><span class="line">$imgg = yuan_img($wx_pic_path);</span><br><span class="line">imagepng($imgg,$wx_pic_path);</span><br><span class="line">imagedestroy($imgg);</span><br><span class="line"></span><br><span class="line">&lt;!--切圆 End--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--微信 Begin     图片水印--&gt;</span><br><span class="line"></span><br><span class="line">$logo = $wx_pic_path;</span><br><span class="line">$filename = '1.png';</span><br><span class="line"><span class="comment">// 判断微信头像格式</span></span><br><span class="line"></span><br><span class="line">$a = getimagesize($logo);</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> ($a[<span class="number">2</span>]) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">$src_im = imagecreatefromgif($logo);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">$src_im = imagecreatefromjpeg($logo);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">$src_im = imagecreatefrompng($logo);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">echo '图片格式不正确';</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 创建缩略图</span></span><br><span class="line"><span class="comment">// 创建画布</span></span><br><span class="line"><span class="comment">// $src_im = imagecreatefromjpeg($logo);</span></span><br><span class="line">list($src_w,$src_h) = getimagesize($logo);</span><br><span class="line">$min = imagecreatetruecolor(<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!--NB Begin这里将切圆后的图片背景由黑色变透明色 --&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.上色</span></span><br><span class="line">$color=imagecolorallocate($min,<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>);</span><br><span class="line"><span class="comment">//3.设置透明</span></span><br><span class="line">imagecolortransparent($min,$color);</span><br><span class="line">imagefill($min,<span class="number">0</span>,<span class="number">0</span>,$color);</span><br><span class="line"></span><br><span class="line">&lt;!--NB End--&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">imagecopyresampled($min, $src_im, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">100</span>, $src_w, $src_h);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将图片创建为画布资源</span></span><br><span class="line">$dst_im = imagecreatefrompng($filename);</span><br><span class="line">list($dst_w,$dst_h) = getimagesize($filename);</span><br><span class="line"></span><br><span class="line">$dst_x = ($dst_w<span class="number">-100</span>)/<span class="number">2</span>;</span><br><span class="line">$dst_y = <span class="number">180</span>;</span><br><span class="line"><span class="comment">// 透明度 100 为不透明</span></span><br><span class="line">$pct = <span class="number">100</span>;</span><br><span class="line">list($src_x,$src_y) = getimagesize($logo);</span><br><span class="line">imagecopymerge($dst_im, $min, $dst_x, $dst_y, <span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">100</span>, $pct);</span><br><span class="line"></span><br><span class="line">&lt;!-- 微信 EDN --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- QRCode Begin  --&gt;</span><br><span class="line"><span class="comment">// 通过openid生成专属二维码</span></span><br><span class="line"><span class="keyword">if</span> ($openid != null) &#123;</span><br><span class="line">  $url_ip='http://lightup.XXXXX.top/XXXXX.php?openid='.$openid;</span><br><span class="line">  $ch = curl_init($url_ip);</span><br><span class="line">  curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="literal">true</span>);</span><br><span class="line">  curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">  curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, <span class="number">120</span>);</span><br><span class="line">  <span class="comment">// curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);</span></span><br><span class="line">  $result = curl_exec($ch);</span><br><span class="line">  curl_close($ch);</span><br><span class="line">  $res_qr = json_decode($result);</span><br><span class="line">  $qr_url = $res_qr-&gt;msg;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 二维码图片资源</span></span><br><span class="line">list($qr_w,$qr_h) = getimagesize($qr_url);</span><br><span class="line">$qr_res = getimagesize($qr_url);</span><br><span class="line"><span class="keyword">switch</span> ($qr_res[<span class="number">2</span>]) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">$qr_mi = imagecreatefromgif($qr_url);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">$qr_mi = imagecreatefromjpeg($qr_url);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">$qr_mi = imagecreatefrompng($qr_url);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">echo '图片格式不正确';exit;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 缩略 二维码</span></span><br><span class="line">$qr_copy = imagecreatetruecolor(<span class="number">80</span>, <span class="number">80</span>);</span><br><span class="line">imagecopyresampled($qr_copy, $qr_mi, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">80</span>, $qr_w, $qr_h);</span><br><span class="line"></span><br><span class="line">$dst_qr_x = $dst_w<span class="number">-375</span>;</span><br><span class="line">$dst_qr_y = <span class="number">1035</span>;</span><br><span class="line"><span class="comment">// 透明度 100 为不透明</span></span><br><span class="line">$pct = <span class="number">100</span>;</span><br><span class="line"><span class="comment">// 进行 copy</span></span><br><span class="line">imagecopymerge($dst_im, $qr_copy, $dst_qr_x, $dst_qr_y, <span class="number">0</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">80</span>, $pct);</span><br><span class="line">&lt;!--  QRCode End   --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 写入文字数据 Begin --&gt;</span><br><span class="line"></span><br><span class="line">$url_info='http://lightup.XXXX.top/zo_XXX/gXXXXX.php';</span><br><span class="line">$data_info = array(</span><br><span class="line">'openid'=&gt;$openid,</span><br><span class="line">);</span><br><span class="line">function https_request($url, $data = null)</span><br><span class="line">&#123;</span><br><span class="line">  $curl = curl_init();</span><br><span class="line">  curl_setopt($curl, CURLOPT_URL, $url);</span><br><span class="line">  curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, <span class="literal">FALSE</span>);</span><br><span class="line">  curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, <span class="literal">FALSE</span>);</span><br><span class="line">  <span class="keyword">if</span> (!empty($data))&#123;</span><br><span class="line">   curl_setopt($curl, CURLOPT_POST, <span class="number">1</span>);</span><br><span class="line">   curl_setopt($curl, CURLOPT_POSTFIELDS, $data);</span><br><span class="line">  &#125;</span><br><span class="line">  curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">  $output = curl_exec($curl);</span><br><span class="line">  curl_close($curl);</span><br><span class="line">  <span class="keyword">return</span> $output;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 获取个人信息</span></span><br><span class="line">$info_res = json_decode(https_request($url_info,$data_info));</span><br><span class="line">$info_name =  $info_res-&gt;msg-&gt;name;</span><br><span class="line">$info_score =  $info_res-&gt;msg-&gt;score;</span><br><span class="line">$info_class =  $info_res-&gt;msg-&gt;<span class="keyword">class</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 姓名水印</span></span><br><span class="line">$nameTextBox = imagettfbbox(18, 0, 'msyh.ttc', $info_name);</span><br><span class="line"><span class="comment">// 产生文本 横向长度</span></span><br><span class="line"><span class="meta">#这里注意生成文本框的内容和显示的内容要统一，不然不能做到文字居中显示，我在调试的时候因为这里的失误耽误的不少时间</span></span><br><span class="line">$nameTextBox[<span class="number">2</span>];</span><br><span class="line"><span class="comment">// 文字坐标居中</span></span><br><span class="line">$dst_name_x = ($dst_w-$nameTextBox[<span class="number">2</span>])/<span class="number">2</span>;</span><br><span class="line">$dst_name_y = <span class="number">325</span>;</span><br><span class="line"><span class="comment">// 透明度 100 为不透明</span></span><br><span class="line">$pct = <span class="number">100</span>;</span><br><span class="line">$Rand_color = imagecolorallocate($dst_im, mt_rand(<span class="number">0</span>,<span class="number">255</span>), mt_rand(<span class="number">0</span>,<span class="number">255</span>), mt_rand(<span class="number">0</span>,<span class="number">255</span>));</span><br><span class="line">$white = imagecolorallocate($dst_im,<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>);</span><br><span class="line">imagettftext($dst_im, 18, 0, $dst_name_x, $dst_name_y, $white, 'msyh.ttc', $info_name);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里要注意一点，如果引入的字体不支持中文会导致中文乱码的情况出现。</span></span><br><span class="line"></span><br><span class="line">&lt;!-- 写入文字数据 End --&gt;</span><br><span class="line"></span><br><span class="line">header(<span class="string">"content-type:image/png"</span>);</span><br><span class="line"></span><br><span class="line">$path_wx = createfolder('zsssc');</span><br><span class="line">$picname = $openid.'_WXPIC.png';</span><br><span class="line">$zo_pic_path = $path_wx.$picname;</span><br><span class="line"><span class="comment">// imagepng($dst_im); # 输出到页面显示</span></span><br><span class="line">imagepng($dst_im,$zo_pic_path); <span class="meta"># 输出到指定目录</span></span><br><span class="line"><span class="comment">// 背景资源</span></span><br><span class="line">imagedestroy($dst_im);</span><br><span class="line"><span class="comment">// 头像资源</span></span><br><span class="line">imagedestroy($src_im);</span><br><span class="line"><span class="comment">// 头像缩略资源</span></span><br><span class="line">imagedestroy($min);</span><br><span class="line"><span class="comment">// QR资源</span></span><br><span class="line">imagedestroy($qr_mi);</span><br><span class="line"><span class="comment">// QR缩略资源</span></span><br><span class="line">imagedestroy($qr_copy);</span><br><span class="line"></span><br><span class="line">echo str_replace(<span class="string">"/xxxx/xxxxn/sexxxxloy/"</span>,<span class="string">"http://"</span>,$zo_xxx_path); exit; <span class="meta"># 返回图片路径</span></span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>切圆部分代码是百度到的，来源应该是这个博客 <a href="http://www.zhaokeli.com" target="_blank" rel="noopener">http://www.zhaokeli.com</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">总结</span><br><span class="line">难点部分主要是对图片的切圆处理，其余部分就看对GD库的熟悉程度了。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前段时间有项目需求是 将切圆的微信头像、个人属性二维码、文字信息 合成到一张图片上传到前端进行显示。&lt;br&gt;毕竟也是花了点时间做出来的东西，就在这里记录下吧&lt;/p&gt;
&lt;p&gt;废话不说直接上代码&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;
      
    
    </summary>
    
      <category term="笔记" scheme="http://www.loy7778.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="PHP_GD" scheme="http://www.loy7778.cn/tags/PHP-GD/"/>
    
  </entry>
  
  <entry>
    <title>关于 Kingeditor</title>
    <link href="http://www.loy7778.cn/2018/%E5%85%B3%E4%BA%8E-Kingeditor/"/>
    <id>http://www.loy7778.cn/2018/关于-Kingeditor/</id>
    <published>2018-02-02T06:17:00.000Z</published>
    <updated>2018-02-02T07:03:26.524Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Kingeditor 是一款比较老的富文本编辑器，好像已经停止更新了。因为之前项目中有用到这款编辑器的传图功能，并且也存在一些不完善的地方，再回头来进行一些调整。</p></blockquote><p>关于关闭网络传图功能：<br><blockquote><p>在百度上找到一些答案但都没有达到想要的效果，最后查看 Kingeditor官网]  demo找到了。<br><a href="http://kindeditor.net/demo.php" target="_blank" rel="noopener">http://kindeditor.net/demo.php</a><br><img src="/images/kingeditor/King.png" class="[FB]"></p></blockquote></p><p>还有一些关于传图路径的设置：</p><blockquote><p>我这里使用的是php开发的，其相关设置是在 upload_json.php 文件中。这里要注意区分 图片存储的物理目录 和 图片访问时的虚拟目录 之间的设置。</p></blockquote><img src="/images/kingeditor/php.png" class="[FB]"><blockquote><p>总结：<br>    有官方文档的内容，遇到问题要先从官方的文档和demo中查找问题的解决方案。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;&lt;p&gt;Kingeditor 是一款比较老的富文本编辑器，好像已经停止更新了。因为之前项目中有用到这款编辑器的传图功能，并且也存在一些不完善的地方，再回头来进行一些调整。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;关于关闭网络传图功能：&lt;br&gt;&lt;blockq
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PHPMailer</title>
    <link href="http://www.loy7778.cn/2018/PHPMailer/"/>
    <id>http://www.loy7778.cn/2018/PHPMailer/</id>
    <published>2018-01-17T07:26:34.000Z</published>
    <updated>2018-01-17T08:03:01.900Z</updated>
    
    <content type="html"><![CDATA[<p>之前做了一个 发送邮件的demo，在本地测试完成之后就没动过，昨天上传到服务器（服务器环境是LAMP）之后发现邮件发送时网页非常卡顿，最后报错503 邮件发送失败<br>百度找到的方法也是千奇百怪，不过总结下来最多的情况就是端口占用和php.ini 的配置。<br>我这里最后解决是 配置了php.ini 文件</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">配置 openssl,在php.ini文件中，找到extension=php_openssl.dll，把前面的“；”去掉，重启apache。</span><br><span class="line">然后查看allow_url_fopen allow_url_fopen = On</span><br><span class="line">再查看是不是禁用函数了 disable_functions = pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority</span><br></pre></td></tr></table></figure><p>然后 把发邮件的SMTP端口由25更换为ssl加密对应的端口 之后解决的问题。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">SSL(Secure Sockets Layer 安全套接层),及其继任者传输层安全（Transport Layer Security，TLS）是为网络通信提供安全及数据完整性的一种安全协议。TLS与SSL在传输层对网络连接进行加密。</span><br><span class="line">SSL协议提供的服务主要有：</span><br><span class="line"><span class="number">1</span>、认证用户和服务器，确保数据发送到正确的客户机和服务器；</span><br><span class="line"><span class="number">2</span>、加密数据以防止数据中途被窃取；</span><br><span class="line"><span class="number">3</span>、维护数据的完整性，确保数据在传输过程中不被改变。</span><br><span class="line">建议您在设置邮箱时使用SSL协议，这样会保障您邮箱更安全的使用。</span><br><span class="line">使用方法：当您选择了使用SSL协议时，请您同时修改各收/发件服务器端口号。</span><br><span class="line">      邮件服务器名称服务器地址 端口号</span><br><span class="line">      POP3服务器pop<span class="number">.126</span>.com <span class="number">110</span></span><br><span class="line">      SMTP服务器smtp<span class="number">.126</span>.com <span class="number">25</span></span><br><span class="line">      IMAP服务器imap<span class="number">.126</span>.com <span class="number">143</span></span><br><span class="line">注：若您关闭了SSL，请将端口号修改回来，POP3的为<span class="number">110</span>，IMAP的为<span class="number">143</span>，SMTP的为<span class="number">25</span>。</span><br></pre></td></tr></table></figure><img src="/images/PHPMailer/SMTP_163.jpg" class="[163SMTP端口]"><p>中间测试和很久，总结下来用该非加密的邮件在Linux或者最新版的PHPMailer中运行传递被限制，25端口被占用也会引起这样的情况，但是我再测试时已经把占用25端口的服务关闭了。<br>在本地的测试环境是可以用25端口正常发送，但是在没有手动开启openssl时是不能用ssl发送邮件的。<br>所以，后面再碰到类似的情况，服务限制（比如ssl扩展是否开启）和端口占用方便查起。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">网上的朋友还有说开启 SElinux 的，但是个人测试来看没有效果，可能是赵成问题的原因不一样。</span><br><span class="line">vim /etc/selinux/config</span><br><span class="line">disabled</span><br><span class="line">检查服务器发信权限：</span><br><span class="line">#$ getsebool httpd_can_sendmail</span><br><span class="line">httpd_can_sendmail --&gt; off</span><br><span class="line">#$ getsebool httpd_can_network_connect</span><br><span class="line">httpd_can_network_connect --&gt; off</span><br><span class="line">如果出现上面的提示，则表明SElinux已经禁用了发信权限，需要按下面操作开启。</span><br><span class="line">#$ setsebool -P httpd_can_sendmail 1</span><br><span class="line">#$ setsebool -P httpd_can_network_connect 1</span><br><span class="line">请注意上面的操作需要在root权限下操作，如果不行请在命令前加上sudo。</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">中间参考的博文地址在这里，各位可以参考</span><br><span class="line">http:<span class="comment">//drupalchina.cn/forum/302.html</span></span><br><span class="line">http:<span class="comment">//blog.csdn.net/kunpeng1987/article/details/78494256</span></span><br><span class="line">http:<span class="comment">//blog.csdn.net/xinluke/article/details/51925293</span></span><br><span class="line">http:<span class="comment">//help.163.com/10/1111/15/6L7HMASV00753VB8.html</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前做了一个 发送邮件的demo，在本地测试完成之后就没动过，昨天上传到服务器（服务器环境是LAMP）之后发现邮件发送时网页非常卡顿，最后报错503 邮件发送失败&lt;br&gt;百度找到的方法也是千奇百怪，不过总结下来最多的情况就是端口占用和php.ini 的配置。&lt;br&gt;我这里最
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于递归</title>
    <link href="http://www.loy7778.cn/2018/%E5%85%B3%E4%BA%8E%E9%80%92%E5%BD%92/"/>
    <id>http://www.loy7778.cn/2018/关于递归/</id>
    <published>2018-01-04T08:11:17.000Z</published>
    <updated>2018-01-05T01:10:12.957Z</updated>
    
    <content type="html"><![CDATA[<p>最近在学习 Python ，不可避免的再一次跪倒在递归的裙摆之下。好记性不如烂笔头，温故而知新。在此记录一般循环和递归的对比。<br>先看循环体：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a</span><span class="params">(n)</span>:</span></span><br><span class="line">    f1 = <span class="number">1</span></span><br><span class="line">    f2 = <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> n &lt;= <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> n &gt; <span class="number">2</span>:</span><br><span class="line">      <span class="keyword">while</span>(n &gt; <span class="number">2</span>):</span><br><span class="line">          f3 = f1+f2</span><br><span class="line">          f1 = f2</span><br><span class="line">          f2 = f3</span><br><span class="line">          n-=<span class="number">1</span></span><br><span class="line">      <span class="keyword">return</span> f3</span><br><span class="line"><span class="keyword">print</span> a(<span class="number">10</span>)</span><br><span class="line">递归：</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">c</span><span class="params">(n)</span>:</span></span><br><span class="line">  <span class="keyword">if</span> n&gt;<span class="number">2</span>:</span><br><span class="line">    fn = c(n<span class="number">-1</span>)+c(n<span class="number">-2</span>)</span><br><span class="line">    <span class="keyword">return</span> fn</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">print</span> c(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><br>获取兔子总数，要获得数列可以用 append 方法依次往初始化数列中添加。<br>总体看下来 递归更偏向于抽象的拆分，这并不意味着递归的效率最高，<br>在Python中递归的默认层数为100层，如果递归层数过多，对系统也是一种负担，总之根据项目需求灵活应变才是正道。</p><p>如果对递归理解不是那么容易的话，就把整个过程看做两个方面：<br>The Frist<br>  递归到最后必须要出现终止，无限递归可不好玩，所以就有了 if else 来区分递归深入和递归终止。<br>The Second<br>  有了第一部分的递归终止，你要求得的结果就可以由 递归终止 开始一步一步向上求值获得。<br>这样反过来理解 可能会好一些。<br>下面写关于 汉诺塔 的递归代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def e(n,o,t,s):</span><br><span class="line">  <span class="keyword">if</span> n&gt;=<span class="number">2</span>:</span><br><span class="line">    e(n<span class="number">-1</span>,o,s,t)</span><br><span class="line">    e(<span class="number">1</span>,o,t,s)</span><br><span class="line">    e(n<span class="number">-1</span>,t,o,s)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> o+<span class="string">'===&gt;'</span>+s</span><br><span class="line">e(<span class="number">2</span>,<span class="string">'o'</span>,<span class="string">'t'</span>,<span class="string">'s'</span>)</span><br></pre></td></tr></table></figure><p>汉诺塔的移动也可以分为两个方面：<br>The Frist<br>  不论现在o柱子上有多少层，(当然，肯定是大于一的)都把他们抽象的看做两层，<br>The Second<br>  现在你要做的就是<br>  把”第一层”由o柱移动到t柱<br>  再把”第二层”由o柱移动到s柱<br>  最后一步将”第一层”由t柱移动到s柱<br>  这期间你要做的当然不是移动上面的盘子，你要做的是更换柱子的位子，就是更换调用函数时对参数重新赋值</p><blockquote><p>这些都是抽象步骤，不考虑过程。将上面的兔子的两部分拿到这里，也是从”终止递归”开始一步步往上得到你最终的结果。你所有的结果一定是从”递归终止”最后一步开始的。</p><footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在学习 Python ，不可避免的再一次跪倒在递归的裙摆之下。好记性不如烂笔头，温故而知新。在此记录一般循环和递归的对比。&lt;br&gt;先看循环体：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>常用sql函数</title>
    <link href="http://www.loy7778.cn/2017/%E5%B8%B8%E7%94%A8sql%E5%87%BD%E6%95%B0/"/>
    <id>http://www.loy7778.cn/2017/常用sql函数/</id>
    <published>2017-12-28T01:19:02.000Z</published>
    <updated>2018-02-02T06:19:49.561Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>做WEB开发，每天都要和数据库打交道，所以，常用的sql函数还是有必要记录下的，下面记录项目中经常使用到的sql函数</p></blockquote><p>字符串拼接<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CONCAT(char c1, char c2, ..., char cn) ，其中char代表字符串，定长与不定长均可以</span><br></pre></td></tr></table></figure></p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数值加和则可以直接使用 + 进行操作，其中不论数据类型，英文字母和汉字在计算过程中值默认是 <span class="number">0</span> 指的注意的是，不论 + 号操作符还是 CONCAT 函数 ，参数中出现<span class="literal">NULL</span>值会导致结果为NULl值。</span><br></pre></td></tr></table></figure><p>关于NUll值处理<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">isnull(expr) # 如expr 为null，那么isnull() 的返回值为 1，否则返回值为 0。</span><br><span class="line">IFNULL(expr1,expr2) # 如 expr1 为 null 则输出 expr2 ，否则输出 expr1</span><br><span class="line">NULLIF(expr1,expr2) # 如 expr1 = expr1 则输出 NULL ，否则输出 expr1</span><br><span class="line">IS NOT NULL # 判断非 NULL ，而 非空判断 用 !=''</span><br></pre></td></tr></table></figure></p><p>多字段排序<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ORDER BY expr1 ASC,expr2 DESC,expr3,...</span><br></pre></td></tr></table></figure></p><p>同一字段多种排序<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ORDER BY FIELD(name,'Suzi','Ben') DESC # 该函数根据某一字段的值进行排序，如果没有填写字段的所有情况的值，将先按未填写在函数中的字段进行排序。而后再按函数内字段排序。</span><br></pre></td></tr></table></figure></p><p>格式化时间戳<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from_unixtime(addtime,'%Y-%m-%d %H:%i:%s') # 该函数根据某一字段的值进行排序，如果没有填写字段的所有情况的值，将先按未填写在函数中的字段进行排序。而后再按函数内字段排序。</span><br></pre></td></tr></table></figure></p><p>日期操作<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TO_DAYS(950501) # 给出一个日期 date，返回一个天数(从 0 年开始的天数)</span><br><span class="line">FROM_DAYS(TO_DAYS(950501)) # 给出一个天数 N，返回一个 DATE 值</span><br></pre></td></tr></table></figure></p><p>字符串处理<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPPER('abc') # 小写变大写</span><br></pre></td></tr></table></figure></p><p>结果集操作<br><blockquote><p>UNION 和 UNION ALL<br>UNION 操作符用于合并两个或多个 SELECT 语句的结果集。<br>请注意，UNION 内部的 SELECT 语句必须拥有相同数量的列。列也必须拥有相似的数据类型。同时，每条 SELECT 语句中的列的顺序必须相同</p><p>默认地，UNION 操作符选取不同的值。如果允许重复的值，请使用 UNION ALL。<br>UNION 结果集中的列名总是等于 UNION 中第一个 SELECT 语句中的列名。<br>UNION ALL 命令和 UNION 命令几乎是等效的，不过 UNION ALL 命令会列出所有的值。<br>另外还有一点要注意 在对合并之后的结果集操作时，外层 select 的 表名称 要起别名，不然会报错。</p></blockquote></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;&lt;p&gt;做WEB开发，每天都要和数据库打交道，所以，常用的sql函数还是有必要记录下的，下面记录项目中经常使用到的sql函数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;字符串拼接&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>FB_授权登录</title>
    <link href="http://www.loy7778.cn/2017/FB-%E6%8E%88%E6%9D%83%E7%99%BB%E7%99%BB%E5%BD%95/"/>
    <id>http://www.loy7778.cn/2017/FB-授权登登录/</id>
    <published>2017-12-25T03:42:42.000Z</published>
    <updated>2018-06-12T10:04:36.536Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间有项目需求是要使用脸书授权用户登录，当时的我内心是这个表情 :-O<br>虽然过后层并不是一帆风顺，但好在问题解决了。<br>这个是 FB 官方文档地址，大家可以进去看看。<br><a href="https://developers.facebook.com/docs/facebook-login" title="[developers] [FaceBook]" target="_blank" rel="noopener">developers.facebook.com</a><br>因为项目是WEB，所以这里仅说明WEb端的步骤。<br>下面贴出 FB 开发者账号设置步骤。<br><img src="/images/FB/1.png" class="[FB]"><br><img src="/images/FB/2.png" class="[FB]"><br><img src="/images/FB/3.png" class="[FB]"><br><img src="/images/FB/4.png" class="[FB]"><br><img src="/images/FB/5.png" class="[FB]"><br><img src="/images/FB/6.png" class="[FB]"><br><img src="/images/FB/7.png" class="[FB]"><br><img src="/images/FB/8.png" class="[FB]"><br><img src="/images/FB/9.png" class="[FB]"></p><p>代码部分的话 其实单说FB授权跟WX授权流程基本一致，都是通过OAuth2<br>FB 对PHPer还是比较友好的，有相关的SDK<br><a href="https://developers.facebook.com/docs/reference/php" title="https://developers.facebook.com/docs/reference/php/ [developers] [FaceBook]" target="_blank" rel="noopener"></a><br>获取这个SDK之后基本上只需要将自己的应用编号和秘钥填进去就可以了</p><blockquote><p>推荐几个翻墙工具</p><pre><code>赛风翻墙软件下载https://github.com/XL2014/vpn/raw/master/psiphon3.exetunnello 谷歌浏览器插件VPN 每天200M流量http://www.chromedownloads.net/extensions/622.html这个插件 可以直接在Google商店 直接搜索到，注册账号之后 就可以使用在注册账号的时候需要 通过VPN 到外网注册</code></pre></blockquote><blockquote><p>总结<br>    使用FB账号时，尽量不要切换IP，IP切换频繁的话会被封号，我完成项目之前被封了4个帐号 emmm 这一点的话推荐还是找有固定IP的VPN。<br>    回头再看也没有比较麻烦的地方，但是对于FB开发者账号的应用还是知之甚少。但就授权来说，主要还是跳转授权的地址要确定配置成为能访问到FB。这一点上我们运维很厉害了，哈哈。<br>    代码部分后面存放在百度云盘再贴出来。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前段时间有项目需求是要使用脸书授权用户登录，当时的我内心是这个表情 :-O&lt;br&gt;虽然过后层并不是一帆风顺，但好在问题解决了。&lt;br&gt;这个是 FB 官方文档地址，大家可以进去看看。&lt;br&gt;&lt;a href=&quot;https://developers.facebook.com/do
      
    
    </summary>
    
      <category term="笔记" scheme="http://www.loy7778.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="FaceBook" scheme="http://www.loy7778.cn/tags/FaceBook/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 搭建过程</title>
    <link href="http://www.loy7778.cn/2017/Hexo-%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/"/>
    <id>http://www.loy7778.cn/2017/Hexo-搭建过程/</id>
    <published>2017-12-23T07:37:23.000Z</published>
    <updated>2017-12-25T05:14:48.875Z</updated>
    
    <content type="html"><![CDATA[<p>这里记录是从 配置环境之后的记录 有需要环境配置的朋友自行百度。</p><p>首先第一步<br>    要创建自己的GitHub账号 传送门 <a href="https://github.com/" title="[loy] [Github]" target="_blank" rel="noopener">GitHub</a> </p><p>第二步<br>    使用自己的GitHub账号建库 库名格式必须为 GitHub账号.github.io<br>    在创建库时要注意最后这一个选项 要打勾，否者后面将不能添加绑定域名<br>    <img src="/images/BuildHexo/1.png" class="[GitHub创建库]"></p><p>第三步<br>    进入库的设置将自己的域名添加进去<br>    <img src="/images/BuildHexo/3.png" class="[GitHub创建库]"><br>    <img src="/images/BuildHexo/2.png" class="[GitHub创建库]"><br>第四步<br>    将自己的域名解析到 GitHub 的IP 注意这里的Ip有可能会产生变化从而导致解析失效。<br>    <img src="/images/BuildHexo/4.png" class="[GitHub创建库]"></p><p>常用的 HEXO 命令</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hexo n "新文章名字" # 新建文章</span><br><span class="line"></span><br><span class="line">hexo g  # 清除 public 文件有时清除不干净导致无法更新博客内容，这是可以手动删除 public 文件夹</span><br><span class="line"></span><br><span class="line">hexo s # 开启本地服务</span><br><span class="line"></span><br><span class="line">hexo d # 将本地文件上载更新到Git库中</span><br><span class="line"></span><br><span class="line">hexo 文件中 代码标签一行必须从行首开始否者不会生效导致原样输出</span><br></pre></td></tr></table></figure><blockquote><p>总结<br>    整体搭建还算简单主要是一些配置文件不熟悉，这篇博文后续跟上 环境搭建 的步骤<br>    现在还欠缺的有博文评论功能 也在后续跟上吧 </p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这里记录是从 配置环境之后的记录 有需要环境配置的朋友自行百度。&lt;/p&gt;
&lt;p&gt;首先第一步&lt;br&gt;    要创建自己的GitHub账号 传送门 &lt;a href=&quot;https://github.com/&quot; title=&quot;[loy] [Github]&quot; target=&quot;_bla
      
    
    </summary>
    
      <category term="笔记" scheme="http://www.loy7778.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Hexo" scheme="http://www.loy7778.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>汇总</title>
    <link href="http://www.loy7778.cn/2017/%E6%B1%87%E6%80%BB/"/>
    <id>http://www.loy7778.cn/2017/汇总/</id>
    <published>2017-12-22T07:40:11.000Z</published>
    <updated>2017-12-23T08:42:02.602Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p><footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote><figure class="highlight plain"><figcaption><span>[title] [] [url] [link text]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code snippet</span><br></pre></td></tr></table></figure><p>样例<br>普通的代码块</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert(<span class="string">'Hello World!'</span>);</span><br></pre></td></tr></table></figure><p>alert(‘Hello World!’);<br>指定语言</p><p>php输出<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$arr = <span class="keyword">array</span>(<span class="string">'23'</span>,<span class="string">'kk'</span>=&gt;<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">implode(<span class="string">','</span>,$arr);</span><br></pre></td></tr></table></figure><br>[rectangle setX: 10 y: 10 width: 20 height: 20];</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[rectangle setX: <span class="number">10</span> y: <span class="number">10</span> width: <span class="number">20</span> height: <span class="number">20</span>];</span><br></pre></td></tr></table></figure><p>[rectangle setX: 10 y: 10 width: 20 height: 20];<br>附加说明</p><figure class="highlight plain"><figcaption><span>Array.map</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array.map(callback[, thisArg])</span><br></pre></td></tr></table></figure><p>Array.map<br>array.map(callback[, thisArg])<br>附加说明和网址</p><figure class="highlight plain"><figcaption><span>_.compact</span><a href="http://underscorejs.org/#compact" target="_blank" rel="noopener">Underscore.js</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</span><br><span class="line">=&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure><p><em>.compactUnderscore.js</em>.compact([0, 1, false, 2, ‘’, 3]);<br>=&gt; [1, 2, 3]</p><p>查找文章编写的标签<br>背景图片更换 Ingrid Michaeson<br>百度检测添加</p><p>正确认识和使用 标签以及分类</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;&lt;p&gt;Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;David L
      
    
    </summary>
    
    
  </entry>
  
</feed>
